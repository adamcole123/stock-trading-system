import { SwaggerDefinitionConstant } from "swagger-express-ts";

export default {
	User: {
		id: "User",
		properties: {
			username: {
				description: "Username of the user",
				type: SwaggerDefinitionConstant.Model.Property.Type.STRING,
				required: true
			},
			email: {
				description: "Email of the user",
				type: SwaggerDefinitionConstant.Model.Property.Type.STRING,
				required: true
			},
			firstName: {
				description: "First name of the user",
				type: SwaggerDefinitionConstant.Model.Property.Type.STRING,
				required: true
			},
			lastName: {
				description: "Last name of the user",
				type: SwaggerDefinitionConstant.Model.Property.Type.STRING,
				required: true
			},
			birthDate: {
				description: "Birth date of the user",
				type: SwaggerDefinitionConstant.Model.Property.Type.STRING,
				example: new Date().toString(),
				required: false
			},
			reports: {
				description: "Reports generated by the user",
				type: SwaggerDefinitionConstant.Model.Property.Type.ARRAY,
				model: "Report",
				required: false
			},
			id: {
				description: "ID of the user",
				type: SwaggerDefinitionConstant.Model.Property.Type.STRING,
				required: false
			},
			password: {
				description: "Password of the user",
				type: SwaggerDefinitionConstant.Model.Property.Type.STRING,
				required: false
			},
			credit: {
				description: "Credit in the user's account",
				type: SwaggerDefinitionConstant.Model.Property.Type.NUMBER,
				required: false
			},
			role: {
				description: "Role of the user",
				type: SwaggerDefinitionConstant.Model.Property.Type.STRING,
				enum: ['Admin', 'Broker', 'User'],
				required: false
			},
			isDeleted: {
				description: "Soft delete status of the user",
				type: SwaggerDefinitionConstant.Model.Property.Type.BOOLEAN,
				required: false
			},
			cardDetails: {
				description: "Card details of the user",
				type: SwaggerDefinitionConstant.Model.Property.Type.ARRAY,
				model: "CreditCard",
				required: false
			},
			activationDate: {
				description: "Date of user account activation",
				type: SwaggerDefinitionConstant.Model.Property.Type.STRING,
				example: new Date().toString(),
				required: false
			},
			banUntil: {
				description: "Date that the user is banned until. If current date is beyond the date or if the value is null then the user is not banned",
				type: SwaggerDefinitionConstant.Model.Property.Type.STRING,
				example: new Date().toString(),
				required: false
			}
		}
	},
	CreditCard: {
		id: "CreditCard",
		properties: {
			cardNumber: {
				description: "Credit card number",
				type: SwaggerDefinitionConstant.Model.Property.Type.STRING,
				required: false
			},
			expiryDate: {
				description: "Credit card expiry date",
				type: SwaggerDefinitionConstant.Model.Property.Type.STRING,
				example: new Date().toString(),
				required: false
			},
			cvv: {
				description: "CVV security code of the credit card",
				type: SwaggerDefinitionConstant.Model.Property.Type.STRING,
				required: false
			},
			nameOnCard: {
				description: "Name on the credit card",
				type: SwaggerDefinitionConstant.Model.Property.Type.STRING,
				required: false
			},
			addressLine1: {
				description: "Address line 1 registered to the credit card",
				type: SwaggerDefinitionConstant.Model.Property.Type.STRING,
				required: false
			},
			city: {
				description: "City registered to the credit card",
				type: SwaggerDefinitionConstant.Model.Property.Type.STRING,
				required: false
			},
			county: {
				description: "County registered to the credit card",
				type: SwaggerDefinitionConstant.Model.Property.Type.STRING,
				required: false
			},
			postcode: {
				description: "Postcode registered to the credit card",
				type: SwaggerDefinitionConstant.Model.Property.Type.STRING,
				required: false
			},
			country: {
				description: "Country registered to the credit card",
				type: SwaggerDefinitionConstant.Model.Property.Type.STRING,
				required: false
			}
		}
	},
	Report: {
		id: "Report",
		properties: {
			id: {
				description: "ID of the report",
				type: SwaggerDefinitionConstant.Model.Property.Type.STRING,
				required: false
			},
			report_data: {
				description: "Data of the report",
				type: SwaggerDefinitionConstant.Model.Property.Type.STRING,
				required: false
			},
			report_type: {
				description: "File MIME type of the report (CSV/XML)",
				enum: ['CSV', 'XML'],
				required: false
			},
			report_date: {
				description: "Date that the report is generated",
				type: SwaggerDefinitionConstant.Model.Property.Type.STRING,
				required: false,
				example: new Date().toString() 
			}
		}
	},
	Stock: {
		id: "Stock",
		properties: {
			id: {
				description: "ID of the stock",
				type: SwaggerDefinitionConstant.Model.Property.Type.STRING,
				required: false
			},
			symbol: {
				description: "Symbol of the stock",
				type: SwaggerDefinitionConstant.Model.Property.Type.STRING,
				required: false
			},
			name: {
				description: "Name of the stock company",
				type: SwaggerDefinitionConstant.Model.Property.Type.STRING,
				required: false
			},
			value: {
				description: "Current value of the stock",
				type: SwaggerDefinitionConstant.Model.Property.Type.NUMBER,
				required: false
			},
			volume: {
				description: "Current volume of the stock",
				type: SwaggerDefinitionConstant.Model.Property.Type.NUMBER,
				required: false
			},
			open: {
				description: "Value of the stock at 8am in the current or previous day",
				type: SwaggerDefinitionConstant.Model.Property.Type.NUMBER,
				required: false
			},
			close: {
				description: "Value of stock at 4.30pm in the current or previous day",
				type: SwaggerDefinitionConstant.Model.Property.Type.NUMBER,
				required: false
			},
			gains: {
				description: "The gains of the stock, which is the difference between the current value and the value of the stock at market open",
				type: SwaggerDefinitionConstant.Model.Property.Type.NUMBER,
				required: false
			},
			latest_trade: {
				description: "Last time a trade was made with this stock",
				type: SwaggerDefinitionConstant.Model.Property.Type.STRING,
				required: false,
				example: new Date().toString() 
			}
		}
	},
	Trade: {
		id: "Trade",
		properties: {
			id: {
				description: "ID of the trade",
				type: SwaggerDefinitionConstant.Model.Property.Type.STRING,
				required: false
			},
			stock_id: {
				description: "ID of the stock being traded",
				type: SwaggerDefinitionConstant.Model.Property.Type.STRING,
				required: false
			},
			user_id: {
				description: "ID of the user making the trade",
				type: SwaggerDefinitionConstant.Model.Property.Type.STRING,
				required: false
			},
			stock_value: {
				description: "Value of the stock at time of trade",
				type: SwaggerDefinitionConstant.Model.Property.Type.NUMBER,
				required: false
			},
			stock_amount: {
				description: "Amount of stocks being traded",
				type: SwaggerDefinitionConstant.Model.Property.Type.NUMBER,
				required: false
			},
			time_of_trade: {
				description: "Time that the trade was created",
				type: SwaggerDefinitionConstant.Model.Property.Type.STRING,
				required: false,
				example: new Date().toString() 
			},
			trade_type: {
				description: "The type/direction of trade (Buy/Sel)",
				enum: ['Buy', 'Sell'],
				required: false
			},
			trade_status: {
				description: "Current status of the trade",
				enum: ['Pending', 'Approved', 'Rejected'],
				required: false
			}
		}
	}
}