config:
  target: 'http://localhost:8000'
  phases:
    # - duration: 10
    #   arrivalRate: 5
    #   name: Test
    - duration: 60
      arrivalRate: 5
      name: Warm up
    - duration: 120
      arrivalRate: 5
      rampTo: 35
      name: Ramp up load
    - duration: 600
      arrivalRate: 35
      name: Sustained load
  payload:
    - path: "stocks.csv"
      fields:
        - "id"
        - "symbol"
        - "name"
        - "value"
        - "volume"
        - "open"
        - "close"
        - "gains"
        - "latest_trade"
    - path: "newStocks.csv"
      fields:
        - "newId"
        - "newSymbol"
        - "newName"
        - "newValue"
        - "newVolume"
        - "newOpen"
        - "newClose"
        - "newGains"
        - "newLatestTrade"
    - path: "editStocks.csv"
      fields:
        - "editId"
        - "editSymbol"
        - "editName"
        - "editValue"
        - "editVolume"
before:
  flow:
    - log: 'Get user auth tokens'
    - post:
        url: "/user/signin"
        json: 
          username: "user"
          password: "Password1!"
        capture:
          header: "set-cookie"
          as: "user_token"
    - post:
        url: "/user/validate"
        capture:
          json: "$"
          as: "user_data"
        headers: 
          Cookie: "{{ user_token }}"
    - post:
        url: "/user/signin"
        json: 
          username: "admin"
          password: "Password1!"
        capture:
          header: "set-cookie"
          as: "admin_token"
    - post:
        url: "/user/validate"
        capture:
          json: "$"
          as: "admin_data"
        headers: 
          Cookie: "{{ admin_token }}"
    - post:
        url: "/user/signin"
        json: 
          username: "broker"
          password: "Password1!"
        capture:
          header: "set-cookie"
          as: "broker_token"
    - post:
        url: "/user/validate"
        capture:
          json: "$"
          as: "broker_data"
        headers: 
          Cookie: "{{ broker_token }}"
    - get:
        url: "/stock/getOne?symbol={{ symbol }}"
        capture:
          json: "$.id"
          as: "captured_stock_id"
        headers: 
          Cookie: "{{ admin_token }}"
    - log: "user token: {{ user_token }}"
    - log: "admin token: {{ admin_token }}"
    - log: "broker token: {{ broker_token }}"
scenarios:
- name: "Get details of one stock"
  flow:
    - get:
        url: "/stock/getOne?symbol={{ symbol }}"
        headers: 
          Cookie: "{{ admin_token }}"
- name: "Get number of last page"
  flow:
    - get:
        url: "/stock/lastpagenum?limit=10"
        headers: 
          Cookie: "{{ admin_token }}"
- name: "Get many stocks"
  flow:
    - post:
        url: "/stock/getMany"
        json: 
          filters:
           - value: "10"
          options:
           - valueMode: "1"
        headers: 
          Cookie: "{{ admin_token }}"
- name: "Create a stock"
  flow:
    - post:
        url: "/stock/create"
        json: 
          symbol: "{{ newSymbol }}"
          name: "{{ newName }}"
          value: "{{ newValue }}"
          volume: "{{ newVolume }}"
        headers: 
            Cookie: "{{ admin_token }}"
- name: "Edit a stock"
  flow:
    - post:
        url: "/stock/edit"
        json: 
          symbol: "{{ editSymbol }}"
          name: "{{ editName }}"
          value: "{{ editValue }}"
          volume: "{{ editVolume }}"
        headers: 
          Cookie: "{{ admin_token }}"
        
